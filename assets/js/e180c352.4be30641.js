"use strict";(self.webpackChunkifn_survey_handbook=self.webpackChunkifn_survey_handbook||[]).push([[8431],{4409:(e,t,n)=>{n.d(t,{E:()=>V,P:()=>X});var o=n(2389),a=n(7294),i=n(5409),r=n(4866),s=n(5162),l=n(614),p=n(7546);const u=e=>new Map([["en",e]]),c=e=>({code:"en",parts:[e]}),y=(e,t)=>({versionId:"1",surveyDefinition:{key:"test"+(t??""),items:["function"==typeof e?e():e]}}),m=e=>{const[t,n]=(0,a.useState)(void 0);return a.createElement("div",{className:"survey-viewer-"+e.id},a.createElement(i.oP,{survey:y(e.item,e.id),languageCode:"en",backBtnText:"Back",nextBtnText:"Next",onSubmit:e=>n(e[0]),submitBtnText:"Submit",invalidResponseText:"Please check your response",showKeys:!1,hideBackButton:!0}),t?a.createElement("div",{className:"card bg-default"},a.createElement("div",{className:"card-body p-1"},a.createElement("pre",{className:"p-0 m-0"},JSON.stringify(t,void 0,1)))):"")},d=e=>{const t=(e=>{"function"==typeof e&&e();const t=y(e);return new p.S(t,{},[],!0).getRenderedSurvey().items.at(0)})(e.item),n={...e,item:e.item},o=e.customViewer??a.createElement(m,n),i=e.json??t;return a.createElement(r.Z,null,a.createElement(s.Z,{value:"item",label:"Component"},o),a.createElement(s.Z,{value:"code",label:"Code (case-editor-tools)"},a.createElement(l.Z,{language:"jsx"},e.codeSnippet),a.createElement("span",{style:{fontSize:".8em",fontStyle:"italic"}},"To simplify code, helpers ",a.createElement("code",null,"textMap()")," and ",a.createElement("code",null,"text()")," generate respectively a Map and a Localized Text for the english text provided. See Internationalization for more details of translation.")),i?a.createElement(s.Z,{value:"json",label:"JSON"},a.createElement(l.Z,{language:"json"},JSON.stringify(i,void 0,2))):void 0)},x={"client:or":"SurveyEngine.logic.or(\n            SurveyEngine.hasResponse('intake.Q1','rg.scg.1'),\n            SurveyEngine.hasResponse('intake.Q2','rg.scg.1')\n            )\n            ","client:and":"SurveyEngine.logic.and(\n            SurveyEngine.hasResponse('intake.Q1','rg.scg.1'),\n            SurveyEngine.hasResponse('intake.Q2','rg.scg.1')\n            )\n            ","client:not":"SurveyEngine.logic.not(\n            SurveyEngine.hasResponse('intake.Q1','rg.scg.1')\n            )\n            ","client:eq":"SurveyEngine.compare.eq(\n                SurveyEngine.getResponseValueAsNum('survey.age','rg.age'),\n                20\n            )\n            ","client:lt":"SurveyEngine.compare.lt(\n            SurveyEngine.getResponseValueAsNum('survey.age','rg.age'),\n            20\n            )\n            ","client:timestampWithOffset":"SurveyEngine.timestampWithOffset({years: -1})\n            ","client:hasResponse":"// Check if the question intake.Q5 has response int the MultipleChoice (mcg) in the Response Group (rg)\n               return SurveyEngine.hasResponse('intake.Q5', 'rg.mcg')\n            ","client:getAttribute":"// Extract participantFlags from context and 'adult' element from it\n               return SurveyEngine.getters.getAttribute(\n                SurveyEngine.getters.getAttribute(SurveyEngine.getters.getContext(), 'participantFlags'),\n                'adult'\n                )\n            ","client:getAttribute2":"// Extract 'adult' from participantFlags and test if it's equal to '1' (flags value are strings)\n               return SurveyEngine.participantFlags.hasKeyAndValue(\"adult\", \"1\")\n            ","client:checkResponseValueWithRegex":"// Extract 'adult' from participantFlags and test if it's equal to '1' (flags value are strings)\n               return SurveyEngine.checkResponseValueWithRegex('intake.Q6', 'rg.1', '/[0-9]{5}/')\n            ","client:responseHasKeysAll":"// 'intake.Q1' multiplechoice group has, at least option checked with key 'cat' AND 'dog' (regardless other checked response)\n               return SurveyEngine.responseHasKeysAll('intake.Q1','rg.mcg', 'cat', 'dog')\n            ","client:responseHasOnlyKeysOtherThan":"// 'intake.Q1' multiplechoice group has NOT option checked with key 'cat' NOR 'dog' (regardless other checked response)\n              return SurveyEngine.responseHasOnlyKeysOtherThan('intake.Q1','rg.mcg', 'cat', 'dog')\n            ","i18n:dateResponseDiffFromNow":'SurveyEngine.dateResponseDiffFromNow("survey.age","rg.date", "years", true);\n            ',"client:hasParticipantFlag":"SurveyEngine.participantFlags.hasKey('my_flag')\n            ","client:hasParticipantFlagValue":"SurveyEngine.participantFlags.hasKeyAndValue('my_flag', '1')\n            ","study:rules-assign-survey":"study.ifThen(\n                study.checkEventType('SUBMIT'),\n                study.ifThen(\n                    study.checkSurveyResponseKey('profile'),\n                    study.participantActions.assignedSurveys.remove('womenstudy', 'all'),\n                    study.participantActions.assignedSurveys.add('womenstudy', \"prio\"),\n                )\n              );\n            ","study:rules-assign-question":"study.ifThen(\n                study.checkEventType('SUBMIT'),\n                study.ifThen(\n                    study.checkSurveyResponseKey('profile'),\n                    study.if(\n                        study.and(\n                            study.hasResponseKeyWithValue('profile.gender','rg.scg.1', 'woman'),\n                            study.lt(\n                                study.getResponseValueAsNum('profile.age', 'rg.date'),\n                                study.timestampWithOffset({years: -50})\n                            )\n                        ),\n                        study.participantActions.updateFlag('women50', 1),\n                        study.participantActions.updateFlag('women50', 0)\n                    )\n                )\n              );\n            ",singleChoice:"SurveyItems.singleChoice({\n    itemKey:'t1',\n    parentKey:'test',\n    questionText: textMap(\"Single Choice Example \"),\n    responseOptions:[\n        {'key': '1', content: textMap(\"My Option\"), role: 'option' },\n    ]\n  });\n  ",DropDownItem:"SurveyItems.dropDown({\n    itemKey:'t1',\n    parentKey:'test',\n    questionText: textMap(\"DropDown Example \"),\n    responseOptions:[\n        {'key': '1', content: textMap(\"Option One\"), role: 'option' },\n        {'key': '2', content: textMap(\"Option Two\"), role: 'option' },\n        {'key': '3', content: textMap(\"Option Three\"), role: 'option' },\n    ]\n  });\n  ",MultipleChoice:"SurveyItems.multipleChoice({\n    itemKey:'t2',\n    parentKey:'test',\n    questionText: textMap(\"Multiple Choice Example \"),\n    responseOptions:[\n        {'key': '1', content: textMap(\"Choice 1\"), role: 'option' },\n        {'key': '2', content: textMap(\"Choice 2\"), role: 'option' },\n        {'key': '3', content: textMap(\"Choice 3\"), role: 'option' },\n    ]\n  });\n  ",MultipleChoiceExclusive:"const exclusive1 = SurveyEngine.multipleChoice.any('test.t3', \"1\");\n  const exclusive3 = SurveyEngine.multipleChoice.any('test.t3', \"3\");\n\n  return SurveyItems.multipleChoice({\n    itemKey:'t3',\n    parentKey:'test',\n    questionText: textMap(\"Multiple choice with exclusive option\"),\n    responseOptions:[\n      {'key': '1', content: textMap(\"Choice 1\"), role: 'option', disabled: exclusive3 },\n      {'key': '2', content: textMap(\"Choice 2\"), role: 'option' },\n      {'key': '3', content: textMap(\"Choice 3\"), role: 'option', disabled: exclusive1 },\n    ]\n  });\n  ",MultipleChoiceOpenItem:"SurveyItems.multipleChoice({\n    itemKey:'t2',\n    parentKey:'test',\n    questionText: textMap(\"Multiple Choice Example \"),\n    responseOptions:[\n        {'key': '1', content: textMap(\"Choice 1\"), role: 'option' },\n        {'key': '2', content: textMap(\"Choice 2\"), role: 'option' },\n        {\n          'key': '3', \n          content: textMap(\"Choice 3\"), \n          role: 'input',\n        },\n    ]\n  });\n  ",MultipleChoiceComplexOption:'SurveyItems.multipleChoice({\n    itemKey:\'t2\',\n    parentKey:\'test\',\n    questionText: textMap("Multiple Choice Example "),\n    responseOptions:[\n        {\'key\': \'1\', role: \'option\',\n          items: [\n            {"key": "1", role:"text", content: textMap("Main text of the option")},\n            {"key":"2",  role:"text", content: textMap("Small text"), style: [{key:"className", value:"d-block fs-6"}]}\n          ]\n        },\n        {\'key\': \'2\', content: textMap("Choice 2"), role: \'option\' },\n        {\n          \'key\': \'3\', \n          role: \'option\',\n          items: [\n            {"key":"1", role:"text", content: textMap("text in bold"), style: [{key:"className", value:"fw-bold"}]},\n            {"key":"2", role:"text", content: textMap(" text in red"), style: [{key:"className", value:"text-danger"}]}\n          ]\n        },\n    ]\n  });\n  ',ClozeInput:"SurveyItems.clozeQuestion({\n    itemKey:'t1',\n    parentKey:'test',\n    questionText: textMap(\"Cloze question\"),\n    items:[\n        {key: '0', role:'text', content: textMap(\"We can put a text and ask for an number\")},\n        {key: '1', role:'numberInput'},\n        {key: '2', role:'text', content: textMap(\"Then we can continue with another text and ask for a date\")},\n        {key: '3', role:'dateInput'},\n        {key: '4', role:'text', content: textMap(\"or a year-month\")},\n        {key: '5', role:'dateInput', optionProps: {'dateInputMode':'YM'}},\n        {key: '6', role:'text', content: textMap(\"or a drop down\")},\n        {key: '7', role:'dropDownGroup', items: [ \n            {'key': '1', content: textMap(\"Option 1\"), role:'option'},\n            {'key': '2', content: textMap(\"Option 1\"), role: 'option'},\n            \n        ]},\n        \n\n    ]\n  });\n  ",dateInput:"SurveyItems.dateInput({\n    itemKey: 'q1',\n    parentKey: 'test',\n    questionText:textMap(\"A date question\"),\n    dateInputMode: 'YMD',\n  });\n  ",YearMonthInput:"SurveyItems.dateInput({\n    itemKey: 'q2',\n    parentKey: 'test',\n    questionText:textMap(\"A year month question\"),\n    dateInputMode: 'YM',\n  });\n  ",YearInput:"SurveyItems.dateInput({\n    itemKey: 'q2',\n    parentKey: 'test',\n    questionText:textMap(\"A year question\"),\n    dateInputMode: 'Y',\n  });\n  ",MatrixDropDownItem:"SurveyItems.responsiveMatrix({\n    itemKey:'t2',\n    parentKey:'test',\n    questionText: textMap(\"Matrix with drop down\"),\n    breakpoint: 'xl',\n    responseType: \"dropdown\",\n    rows:   [  \n        {'key': 'r1', label: textMap(\"Row 1\"), role: 'row' },\n        {'key': 'r2', label: textMap(\"Row 2\"), role: 'row' },\n        {'key': 'r3', label: textMap(\"Row 3\"), role: 'row' },\n    ],\n    columns: [\n        {'key': 'c1', label: textMap(\"Col 1\")},\n        {'key': 'c2', label: textMap(\"Col 2\")},   \n    ],\n    dropdownConfig: {\n        unselectedLabeL: textMap(\"Choose\"),\n        options: [\n            {'key': '1', label: textMap(\"Choice 1\")},\n            {'key': '2', label: textMap(\"Choice 2\")},  \n        ]\n    }\n  });\n  ",MatrixDropDownCategoryItem:"SurveyItems.responsiveMatrix({\n      itemKey:'t2',\n      parentKey:'test',\n      questionText: textMap(\"Matrix with drop down\"),\n      responseType: \"dropdown\",\n      breakpoint: 'xl',\n      rows:   [  \n          {'key': 'rc3', label: textMap(\"A category\"), role: 'category' },\n          {'key': 'r1', label: textMap(\"Row 1\"), role: 'row' },\n          {'key': 'r2', label: textMap(\"Row 2\"), role: 'row' },\n          {'key': 'rc2', label: textMap(\"A second category\"), role: 'category' },\n          {'key': 'r3', label: textMap(\"Row 3\"), role: 'row' },\n          {'key': 'r4', label: textMap(\"Row 4\"), role: 'row' },\n      ],\n      columns: [\n          {'key': 'c1', label: textMap(\"Col 1\")},\n          {'key': 'c2', label: textMap(\"Col 2\")},   \n      ],\n      dropdownConfig: {\n          unselectedLabeL: textMap(\"Choose\"),\n          options: [\n              {'key': '1', label: textMap(\"Choice 1\")},\n              {'key': '2', label: textMap(\"Choice 2\")},  \n          ]\n      }\n    });\n    ",MatrixInputItem:"SurveyItems.responsiveMatrix({\n      itemKey:'t2',\n      parentKey:'test',\n      questionText: textMap(\"Matrix with drop down\"),\n      breakpoint: 'xl',\n      responseType: \"numberInput\",\n      rows:   [  \n          {'key': 'r1', label: textMap(\"Row 1\"), role: 'row' },\n          {'key': 'r2', label: textMap(\"Row 2\"), role: 'row' },\n          {'key': 'r3', label: textMap(\"Row 3\"), role: 'row' },\n      ],\n      columns: [\n          {'key': 'c1', label: textMap(\"Col 1\")},\n          {'key': 'c2', label: textMap(\"Col 2\")},   \n      ]\n    });\n    ",textComponent:"/**\n   * The display helper creates a SurveyItem with a list of textual components\n   * \n   * Each component here has the 'text' role and can show a list of text.\n   * `style` option can be used to customize visual style of the text\n   */\n\n  return SurveyItems.display({\n    itemKey:'t1',\n    parentKey:'test',\n\n    content: [ // List of texts to show\n        \n        {\n            'role': 'text',\n            content: [  // Content is a list of LocalizedObject, each can contain a text (or a expression, resolved during item rendering using response or context)\n                text(\"A stylized text using 'h2' style variant\")\n            ],\n            style: [ // Styles can be used to customize th rendering of the text\n                {key: 'variant', value:'h2'}\n            ]\n        },\n        {\n            role: 'text',\n            content:[ \n                text(\"A very intersting text\") \n            ]\n        }\n   ]\n  });\n  ",basicText:"/**\n                 * The display helper creates a SurveyItem with a list of textual components\n                 * \n                 * Each component here has the 'text' role and can show a list of text.\n                 * `style` option can be used to customize visual style of the text\n                 */\n\n                return SurveyItems.display({\n                    itemKey:'t1',\n                    parentKey:'test',\n\n                    content: [ // List of texts to show\n                        {\n                            role: 'text',\n                            content:[ \n                                text(\"A very intersting text\") \n                            ]\n                        }                       \n                    ]\n                });\n            ",TextInput:"SurveyItems.textInput({\n    itemKey:'t1',\n    parentKey:'test',\n    questionText: textMap(\"Simple text input\"),\n    placeholderText: textMap(\"Placeholder text\")\n  });\n  ",NumberInput:"SurveyItems.numericInput({\n    itemKey:'t2',\n    parentKey:'test',\n    inputLabel: textMap(\"Input label\"),\n    questionText: textMap(\"Number input question \"),\n    componentProperties: {\n      min: 0,\n      max: 120\n    }\n  });\n  ",MultilineTextInput:"SurveyItems.multilineTextInput({\n    itemKey:'t2',\n    parentKey:'test',\n    inputLabelText: textMap(\"My Input label \"),\n    questionText: textMap(\"Question with Multiline Text Input\"),\n  });\n  ",snippetName:"*   ... you code snippet\n* "};class h{constructor(){this.viewers=new Map,this.count=0}registerViewer(e){const t=(n=e.name,x[n]??void 0??'Code snippet not found for "'+e.name+'"');var n;++this.count,this.viewers.set(e.name,{...e,codeSnippet:t,id:this.count})}add(e){Array.isArray(e)?e.forEach((e=>{this.registerViewer(e)})):this.registerViewer(e)}get(e){return this.viewers.get(e)}}var g=n(4453);const v=[{name:"singleChoice",item:()=>g.Cy.singleChoice({itemKey:"t1",parentKey:"test",questionText:u("Single Choice Example "),responseOptions:[{key:"1",content:u("My Option"),role:"option"}]}),prefill:{key:"rg",items:[{key:"scg",items:[{key:"t1"}]}]}},{name:"MultipleChoice",item:()=>g.Cy.multipleChoice({itemKey:"t2",parentKey:"test",questionText:u("Multiple Choice Example "),responseOptions:[{key:"1",content:u("Choice 1"),role:"option"},{key:"2",content:u("Choice 2"),role:"option"},{key:"3",content:u("Choice 3"),role:"option"}]})},{name:"MultipleChoiceExclusive",item:()=>{const e=g.Xq.multipleChoice.any("test.t3","1"),t=g.Xq.multipleChoice.any("test.t3","3");return g.Cy.multipleChoice({itemKey:"t3",parentKey:"test",questionText:u("Multiple choice with exclusive option"),responseOptions:[{key:"1",content:u("Choice 1"),role:"option",disabled:t},{key:"2",content:u("Choice 2"),role:"option"},{key:"3",content:u("Choice 3"),role:"option",disabled:e}]})}},{name:"MultipleChoiceOpenItem",item:()=>g.Cy.multipleChoice({itemKey:"t2",parentKey:"test",questionText:u("Multiple Choice Example "),responseOptions:[{key:"1",content:u("Choice 1"),role:"option"},{key:"2",content:u("Choice 2"),role:"option"},{key:"3",content:u("Choice 3"),role:"input"}]})},{name:"MultipleChoiceComplexOption",item:()=>g.Cy.multipleChoice({itemKey:"t2",parentKey:"test",questionText:u("Multiple Choice Example "),responseOptions:[{key:"1",role:"option",items:[{key:"1",role:"text",content:u("Main text of the option")},{key:"2",role:"text",content:u("Small text"),style:[{key:"className",value:"d-block fs-6"}]}]},{key:"2",content:u("Choice 2"),role:"option"},{key:"3",role:"option",items:[{key:"1",role:"text",content:u("text in bold"),style:[{key:"className",value:"fw-bold"}]},{key:"2",role:"text",content:u(" text in red"),style:[{key:"className",value:"text-danger"}]}]}]})},{name:"DropDownItem",item:()=>g.Cy.dropDown({itemKey:"t1",parentKey:"test",questionText:u("DropDown Example "),responseOptions:[{key:"1",content:u("Option One"),role:"option"},{key:"2",content:u("Option Two"),role:"option"},{key:"3",content:u("Option Three"),role:"option"}]})}],k=[{name:"dateInput",item:()=>g.Cy.dateInput({itemKey:"q1",parentKey:"test",questionText:u("A date question"),dateInputMode:"YMD"})},{name:"YearMonthInput",item:()=>g.Cy.dateInput({itemKey:"q2",parentKey:"test",questionText:u("A year month question"),dateInputMode:"YM"})},{name:"YearInput",item:()=>g.Cy.dateInput({itemKey:"q2",parentKey:"test",questionText:u("A year question"),dateInputMode:"Y"})}],b=[{name:"basicText",item:()=>g.Cy.display({itemKey:"t1",parentKey:"test",content:[{role:"text",content:[c("A very intersting text")]}]})},{name:"textComponent",item:()=>g.Cy.display({itemKey:"t1",parentKey:"test",content:[{role:"text",content:[c("A stylized text using 'h2' style variant")],style:[{key:"variant",value:"h2"}]},{role:"text",content:[c("A very intersting text")]}]})}],w=[{name:"TextInput",item:()=>g.Cy.textInput({itemKey:"t1",parentKey:"test",questionText:u("Simple text input"),placeholderText:u("Placeholder text")})},{name:"NumberInput",item:()=>g.Cy.numericInput({itemKey:"t2",parentKey:"test",inputLabel:u("Input label"),questionText:u("Number input question "),componentProperties:{min:0,max:120}})},{name:"MultilineTextInput",item:()=>g.Cy.multilineTextInput({itemKey:"t2",parentKey:"test",inputLabelText:u("My Input label "),questionText:u("Question with Multiline Text Input")})}],f=[{name:"MatrixDropDownItem",item:()=>g.Cy.responsiveMatrix({itemKey:"t2",parentKey:"test",questionText:u("Matrix with drop down"),breakpoint:"xl",responseType:"dropdown",rows:[{key:"r1",label:u("Row 1"),role:"row"},{key:"r2",label:u("Row 2"),role:"row"},{key:"r3",label:u("Row 3"),role:"row"}],columns:[{key:"c1",label:u("Col 1")},{key:"c2",label:u("Col 2")}],dropdownConfig:{unselectedLabeL:u("Choose"),options:[{key:"1",label:u("Choice 1")},{key:"2",label:u("Choice 2")}]}})},{name:"MatrixDropDownCategoryItem",item:()=>g.Cy.responsiveMatrix({itemKey:"t2",parentKey:"test",questionText:u("Matrix with drop down"),responseType:"dropdown",breakpoint:"xl",rows:[{key:"rc3",label:u("A category"),role:"category"},{key:"r1",label:u("Row 1"),role:"row"},{key:"r2",label:u("Row 2"),role:"row"},{key:"rc2",label:u("A second category"),role:"category"},{key:"r3",label:u("Row 3"),role:"row"},{key:"r4",label:u("Row 4"),role:"row"}],columns:[{key:"c1",label:u("Col 1")},{key:"c2",label:u("Col 2")}],dropdownConfig:{unselectedLabeL:u("Choose"),options:[{key:"1",label:u("Choice 1")},{key:"2",label:u("Choice 2")}]}})},{name:"MatrixInputItem",item:()=>g.Cy.responsiveMatrix({itemKey:"t2",parentKey:"test",questionText:u("Matrix with drop down"),breakpoint:"xl",responseType:"numberInput",rows:[{key:"r1",label:u("Row 1"),role:"row"},{key:"r2",label:u("Row 2"),role:"row"},{key:"r3",label:u("Row 3"),role:"row"}],columns:[{key:"c1",label:u("Col 1")},{key:"c2",label:u("Col 2")}]})}],M=[{name:"ClozeInput",item:()=>g.Cy.clozeQuestion({itemKey:"t1",parentKey:"test",questionText:u("Cloze question"),items:[{key:"0",role:"text",content:u("We can put a text and ask for an number")},{key:"1",role:"numberInput"},{key:"2",role:"text",content:u("Then we can continue with another text and ask for a date")},{key:"3",role:"dateInput"},{key:"4",role:"text",content:u("or a year-month")},{key:"5",role:"dateInput",optionProps:{dateInputMode:"YM"}},{key:"6",role:"text",content:u("or a drop down")},{key:"7",role:"dropDownGroup",items:[{key:"1",content:u("Option 1"),role:"option"},{key:"2",content:u("Option 1"),role:"option"}]}]})}],C=new h;C.add(v),C.add(k),C.add(b),C.add(w),C.add(f),C.add(M);var S=n(6010),E=n(6928),T=n(1388);class I{constructor(e){this.arg=e}getType(){return this.arg.dtype??"str"}isNumeric(){return"num"===this.getType()}isExpression(){return"exp"===this.getType()}isString(){return"str"===this.getType()}num(){return this.arg.num}}function K(e){if("timestampWithOffset"===e.name&&e.data){const n=new I(e.data[0]);if(n.isNumeric()){const e=n.num();if(void 0!==e){const n=(0,E.Z)({start:0,end:1e3*e});return t=(0,T.Z)(n),a.createElement("span",{className:"survey-exp-helper"},t)}}}var t;return a.createElement("span",null)}const q=e=>e.exp?a.createElement("div",{className:"survey-expression"},a.createElement("span",{className:"survey-exp-name"},e.exp.name),a.createElement("span",null,"(",(e=>{if(!e)return a.createElement("span",null);const t=e.length,n=e.some((e=>void 0!==e.exp));return a.createElement("ul",{className:(0,S.Z)("survey-exp-arglist",{"survey-exp-expanded":n})},e.map(((e,n)=>a.createElement("li",{className:(0,S.Z)("survey-exp-arg",{last:n===t-1}),key:n},a.createElement(R,{exp:e})))))})(e.exp.data),")"),K(e.exp)):a.createElement("span",null),R=e=>{switch(e.exp.dtype??"str"){case"exp":return e.exp.exp?a.createElement(q,{exp:e.exp.exp}):a.createElement("span",null);case"str":return a.createElement("span",{className:"survey-exparg-str"},e.exp.str);case"num":return a.createElement("span",{className:"survey-exparg-num"},e.exp.num)}},O=e=>{const t="function"==typeof e.expr?e.expr():e.expr,n=JSON.stringify(t,null,1);return a.createElement(r.Z,null,a.createElement(s.Z,{value:"code",label:"Code (case-editor-tools)"},a.createElement(l.Z,{language:"ts"}," ",e.codeSnippet," ")),a.createElement(s.Z,{value:"expr",label:"JSON"},a.createElement(l.Z,{language:"json"},n)),a.createElement(s.Z,{value:"preview",label:"Preview"},a.createElement("div",{style:{display:"block",border:"1px solid #E6E6E6",padding:".3em"}},a.createElement(q,{exp:t})),a.createElement("small",null,"Preview shows expression using a function call-like syntax, more readable than raw json.")))},N=[{name:"client:or",expr:()=>g.Xq.logic.or(g.Xq.hasResponse("intake.Q1","rg.scg.1"),g.Xq.hasResponse("intake.Q2","rg.scg.1"))},{name:"client:and",expr:()=>g.Xq.logic.and(g.Xq.hasResponse("intake.Q1","rg.scg.1"),g.Xq.hasResponse("intake.Q2","rg.scg.1"))},{name:"client:not",expr:()=>g.Xq.logic.not(g.Xq.hasResponse("intake.Q1","rg.scg.1"))},{name:"client:eq",expr:()=>g.Xq.compare.eq(g.Xq.getResponseValueAsNum("survey.age","rg.age"),20)},{name:"client:lt",expr:()=>g.Xq.compare.lt(g.Xq.getResponseValueAsNum("survey.age","rg.age"),20)},{name:"client:timestampWithOffset",expr:()=>g.Xq.timestampWithOffset({years:-1})},{name:"client:hasResponse",expr:()=>g.Xq.hasResponse("intake.Q5","rg.mcg")},{name:"client:getAttribute",expr:()=>g.Xq.getters.getAttribute(g.Xq.getters.getAttribute(g.Xq.getters.getContext(),"participantFlags"),"adult")},{name:"client:getAttribute2",expr:()=>g.Xq.participantFlags.hasKeyAndValue("adult","1")},{name:"client:checkResponseValueWithRegex",expr:()=>g.Xq.checkResponseValueWithRegex("intake.Q6","rg.1","/[0-9]{5}/")},{name:"client:responseHasKeysAll",expr:()=>g.Xq.responseHasKeysAll("intake.Q1","rg.mcg","cat","dog")},{name:"client:responseHasOnlyKeysOtherThan",expr:()=>g.Xq.responseHasOnlyKeysOtherThan("intake.Q1","rg.mcg","cat","dog")},{name:"i18n:dateResponseDiffFromNow",expr:()=>g.Xq.dateResponseDiffFromNow("survey.age","rg.date","years",!0)},{name:"client:hasParticipantFlag",expr:()=>g.Xq.participantFlags.hasKey("my_flag")},{name:"client:hasParticipantFlagValue",expr:()=>g.Xq.participantFlags.hasKeyAndValue("my_flag","1")}];var A=n(5211);const D=[{name:"study:rules-assign-survey",expr:()=>A.B$.ifThen(A.B$.checkEventType("SUBMIT"),A.B$.ifThen(A.B$.checkSurveyResponseKey("profile"),A.B$.participantActions.assignedSurveys.remove("womenstudy","all"),A.B$.participantActions.assignedSurveys.add("womenstudy","prio")))},{name:"study:rules-assign-question",expr:()=>A.B$.ifThen(A.B$.checkEventType("SUBMIT"),A.B$.ifThen(A.B$.checkSurveyResponseKey("profile"),A.B$.if(A.B$.and(A.B$.hasResponseKeyWithValue("profile.gender","rg.scg.1","woman"),A.B$.lt(A.B$.getResponseValueAsNum("profile.age","rg.date"),A.B$.timestampWithOffset({years:-50}))),A.B$.participantActions.updateFlag("women50",1),A.B$.participantActions.updateFlag("women50",0))))}],B=new h;B.add(N),B.add(D);const X=e=>(0,o.Z)()?(n(5577),(e=>{const t=C.get(e);return t?a.createElement(d,t):a.createElement("span",null,"Unknown component ",e)})(e.name)):"Only online",V=e=>(0,o.Z)()?(n(5577),(e=>{const t=B.get(e);return t?a.createElement(O,t):a.createElement("span",null,"Unknown component ",e)})(e.name)):"Only online"},3551:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var o=n(7462),a=(n(7294),n(3905)),i=n(4409);const r={sidebar_label:"Runtime context",sidebar_class_name:"green"},s="Runtime Context",l={unversionedId:"survey-handbook/survey-engine/context",id:"survey-handbook/survey-engine/context",title:"Runtime Context",description:"Survey context are data provided alongside with the survey definition when a survey is run by the survey engine.",source:"@site/docs/survey-handbook/survey-engine/05-context.mdx",sourceDirName:"survey-handbook/survey-engine",slug:"/survey-handbook/survey-engine/context",permalink:"/docs/survey-handbook/survey-engine/context",draft:!1,editUrl:"https://github.com/influenzanet/survey-handbook/docs/survey-handbook/survey-engine/05-context.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"Runtime context",sidebar_class_name:"green"},sidebar:"surveySidebar",previous:{title:"Internationalization",permalink:"/docs/survey-handbook/survey-engine/i18n"},next:{title:"Extending",permalink:"/docs/survey-handbook/survey-engine/extending"}},p={},u=[],c={toc:u},y="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(y,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"runtime-context"},"Runtime Context"),(0,a.kt)("p",null,"Survey context are data provided alongside with the survey definition when a survey is run by the survey engine."),(0,a.kt)("mermaid",{value:'\nflowchart LR\n\n  subgraph "StudyEngine"\n    surveyDefinition\n    SurveyContext\n  end\n\n  SurveyPayload["Data sent to client"]\n\n  subgraph "Web Client"\n      SurveyEngine\n      UILibrary["UI Library"]\n      SurveyView\n  end\n\nsurveyDefinition & SurveyContext --\x3e SurveyPayload \n\nSurveyPayload --\x3e SurveyEngine\n\nSurveyEngine & UILibrary --\x3e SurveyView["Survey Display"] \n'}),(0,a.kt)("p",null,"When the client want to display a survey to be filled by a participant, it will request it from the Study Service (using ",(0,a.kt)("a",{parentName:"p",href:"../../system/architecture"},"Public API"),").\nThe Study Service will send two pieces of data : the Survey Definition and the Survey Context."),(0,a.kt)("p",null,"The Survey Definition contains all the information to display and run the survey for all its possible configurations (all the possible questions and responses regardless if they will be shown or not), the survey context provide information to determine how to configure the survey for the participant.\nThe survey logic can refer to the data in the context to determine if a question should be shown or not, or if a response should be initialized with response (prefills)."),(0,a.kt)("p",null,"The Survey Context contains the following data:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"list of previous responses to this survey by the participant"),(0,a.kt)("li",{parentName:"ul"},"participant flags"),(0,a.kt)("li",{parentName:"ul"},"a flag indicating if the user is logged (can be used for public survey)")),(0,a.kt)("p",null,"Previous responses provided in the context are prepared by the Study Service using prefill rules (executed before the survey is sent to the client to be displayed)."),(0,a.kt)("p",null,"In the Survey, ",(0,a.kt)("a",{parentName:"p",href:"./expressions"},"expressions")," can be used in many places to get and use data from the context, especially participant flags"),(0,a.kt)("p",null,"Low levels expressions are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"getContext")," expression returns the whole context object"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"getAttribute()")," can extract a value from its name in an object")),(0,a.kt)("p",null,"By combining these two expression you can access to the context' data."),(0,a.kt)("p",null,"Fortunately, typescript library case-editor-tools provides some shorthand helpers to directly create expression to test for participant flag values"),(0,a.kt)("p",null,"To test if a flag is set (regardless its value)"),(0,a.kt)(i.E,{name:"client:hasParticipantFlag",mdxType:"ExpressionViewer"}),(0,a.kt)("p",null,"To test if a flag is set with a given value"),(0,a.kt)(i.E,{name:"client:hasParticipantFlagValue",mdxType:"ExpressionViewer"}))}m.isMDXComponent=!0}}]);