"use strict";(self.webpackChunkifn_survey_handbook=self.webpackChunkifn_survey_handbook||[]).push([[536],{6334:(e,t,n)=>{n.d(t,{E:()=>R,P:()=>b});var s=n(2389),o=n(7294),a=n(5409),r=n(4866),i=n(5162),l=n(614),c=n(7546);const p=e=>new Map([["en",e]]),u=e=>({code:"en",parts:[e]}),g=e=>{const t={versionId:"1",surveyDefinition:{key:"test",items:["function"==typeof e?e():e]}};return new c.S(t,{},[],!0).getRenderedSurvey().items.at(0)},m=e=>o.createElement(a.dP,{renderItem:g(e.item),responsePrefill:e.prefill,responseChanged:e=>console.log(e),showInvalid:!1,languageCode:"en",invalidWarning:"Please check your response",showKeys:!1}),y=e=>{const t=g(e.item),n={...e,item:t},s=e.customViewer??o.createElement(m,n),a=e.json??t;return o.createElement(r.Z,null,o.createElement(i.Z,{value:"item",label:"Component"},s),o.createElement(i.Z,{value:"code",label:"Code (case-editor-tools)"},o.createElement(l.Z,{language:"jsx"},e.codeSnippet),o.createElement("span",{style:{fontSize:".8em",fontStyle:"italic"}},"To simplify code, helpers ",o.createElement("code",null,"textMap()")," and ",o.createElement("code",null,"text()")," generate respectively a Map and a Localized Text for the english text provided. See Internationalization for more details of translation.")),a?o.createElement(i.Z,{value:"json",label:"JSON"},o.createElement(l.Z,{language:"json"},JSON.stringify(a,void 0,2))):void 0)};var d=n(4453);const h={name:"singleChoice",item:()=>d.Cy.singleChoice({itemKey:"t1",parentKey:"test",questionText:p("Single Choice Example "),responseOptions:[{key:"1",content:p("My Option"),role:"option"}]}),prefill:{key:"rg",items:[{key:"scg",items:[{key:"t1"}]}]}},v={name:"dateInput",item:()=>d.Cy.dateInput({itemKey:"q1",parentKey:"test",questionText:p("A date question"),dateInputMode:"YMD"})},x=[{name:"basicText",item:()=>d.Cy.display({itemKey:"t1",parentKey:"test",content:[{role:"text",content:[u("A very intersting text")]}]})},{name:"textComponent",item:()=>d.Cy.display({itemKey:"t1",parentKey:"test",content:[{role:"text",content:[u("A stylized text using 'h2' style variant")],style:[{key:"variant",value:"h2"}]},{role:"text",content:[u("A very intersting text")]}]})}],k={"client:or":"SurveyEngine.logic.or(\n            SurveyEngine.hasResponse('intake.Q1','rg.scg.1'),\n            SurveyEngine.hasResponse('intake.Q2','rg.scg.1')\n            )\n            ","client:and":"SurveyEngine.logic.and(\n            SurveyEngine.hasResponse('intake.Q1','rg.scg.1'),\n            SurveyEngine.hasResponse('intake.Q2','rg.scg.1')\n            )\n            ","client:not":"SurveyEngine.logic.not(\n            SurveyEngine.hasResponse('intake.Q1','rg.scg.1')\n            )\n            ","client:eq":"SurveyEngine.compare.eq(\n                SurveyEngine.getResponseValueAsNum('survey.age','rg.age'),\n                20\n            )\n            ","client:lt":"SurveyEngine.compare.lt(\n            SurveyEngine.getResponseValueAsNum('survey.age','rg.age'),\n            20\n            )\n            ","client:timestampWithOffset":"SurveyEngine.timestampWithOffset({years: -1})\n            ","client:hasResponse":"// Check if the question intake.Q5 has response int the MultipleChoice (mcg) in the Response Group (rg)\n               return SurveyEngine.hasResponse('intake.Q5', 'rg.mcg')\n            ","client:getAttribute":"// Extract participantFlags from context and 'adult' element from it\n               return SurveyEngine.getters.getAttribute(\n                SurveyEngine.getters.getAttribute(SurveyEngine.getters.getContext(), 'participantFlags'),\n                'adult'\n                )\n            ","client:getAttribute2":"// Extract 'adult' from participantFlags and test if it's equal to '1' (flags value are strings)\n               return SurveyEngine.participantFlags.hasKeyAndValue(\"adult\", \"1\")\n            ","client:checkResponseValueWithRegex":"// Extract 'adult' from participantFlags and test if it's equal to '1' (flags value are strings)\n               return SurveyEngine.checkResponseValueWithRegex('intake.Q6', 'rg.1', '/[0-9]{5}/')\n            ","client:responseHasKeysAll":"// 'intake.Q1' multiplechoice group has, at least option checked with key 'cat' AND 'dog' (regardless other checked response)\n               return SurveyEngine.responseHasKeysAll('intake.Q1','rg.mcg', 'cat', 'dog')\n            ","client:responseHasOnlyKeysOtherThan":"// 'intake.Q1' multiplechoice group has NOT option checked with key 'cat' NOR 'dog' (regardless other checked response)\n              return SurveyEngine.responseHasOnlyKeysOtherThan('intake.Q1','rg.mcg', 'cat', 'dog')\n            ",dateInput:"SurveyItems.dateInput({\n    itemKey: 'q1',\n    parentKey: 'test',\n    questionText:textMap(\"A date question\"),\n    dateInputMode: 'YMD',\n  });\n  ",singleChoice:"SurveyItems.singleChoice({\n    itemKey:'t1',\n    parentKey:'test',\n    questionText: textMap(\"Single Choice Example \"),\n    responseOptions:[\n        {'key': '1', content: textMap(\"My Option\"), role: 'option' },\n    ]\n  });\n  ",textComponent:"/**\n   * The display helper creates a SurveyItem with a list of textual components\n   * \n   * Each component here has the 'text' role and can show a list of text.\n   * `style` option can be used to customize visual style of the text\n   */\n\n  return SurveyItems.display({\n    itemKey:'t1',\n    parentKey:'test',\n\n    content: [ // List of texts to show\n        \n        {\n            'role': 'text',\n            content: [  // Content is a list of LocalizedObject, each can contain a text (or a expression, resolved during item rendering using response or context)\n                text(\"A stylized text using 'h2' style variant\")\n            ],\n            style: [ // Styles can be used to customize th rendering of the text\n                {key: 'variant', value:'h2'}\n            ]\n        },\n        {\n            role: 'text',\n            content:[ \n                text(\"A very intersting text\") \n            ]\n        }\n   ]\n  });\n  ",basicText:"/**\n                 * The display helper creates a SurveyItem with a list of textual components\n                 * \n                 * Each component here has the 'text' role and can show a list of text.\n                 * `style` option can be used to customize visual style of the text\n                 */\n\n                return SurveyItems.display({\n                    itemKey:'t1',\n                    parentKey:'test',\n\n                    content: [ // List of texts to show\n                        {\n                            role: 'text',\n                            content:[ \n                                text(\"A very intersting text\") \n                            ]\n                        }                       \n                    ]\n                });\n            ",snippetName:"*   ... you code snippet\n* "};class f{constructor(){this.viewers=new Map}registerViewer(e){const t=(n=e.name,k[n]??void 0??'Code snippet not found for "'+e.name+'"');var n;this.viewers.set(e.name,{...e,codeSnippet:t})}add(e){Array.isArray(e)?e.forEach((e=>{this.registerViewer(e)})):this.registerViewer(e)}get(e){return this.viewers.get(e)}}const E=new f;E.add(h),E.add(v),E.add(x);const S=e=>{const t="function"==typeof e.expr?e.expr():e.expr,n=JSON.stringify(t,null,1);return o.createElement(r.Z,null,o.createElement(i.Z,{value:"code",label:"Code (case-editor-tools)"},o.createElement(l.Z,{language:"ts"}," ",e.codeSnippet," ")),o.createElement(i.Z,{value:"expr",label:"JSON"},o.createElement(l.Z,{language:"json"},n)))},C=[{name:"client:or",expr:()=>d.Xq.logic.or(d.Xq.hasResponse("intake.Q1","rg.scg.1"),d.Xq.hasResponse("intake.Q2","rg.scg.1"))},{name:"client:and",expr:()=>d.Xq.logic.and(d.Xq.hasResponse("intake.Q1","rg.scg.1"),d.Xq.hasResponse("intake.Q2","rg.scg.1"))},{name:"client:not",expr:()=>d.Xq.logic.not(d.Xq.hasResponse("intake.Q1","rg.scg.1"))},{name:"client:eq",expr:()=>d.Xq.compare.eq(d.Xq.getResponseValueAsNum("survey.age","rg.age"),20)},{name:"client:lt",expr:()=>d.Xq.compare.lt(d.Xq.getResponseValueAsNum("survey.age","rg.age"),20)},{name:"client:timestampWithOffset",expr:()=>d.Xq.timestampWithOffset({years:-1})},{name:"client:hasResponse",expr:()=>d.Xq.hasResponse("intake.Q5","rg.mcg")},{name:"client:getAttribute",expr:()=>d.Xq.getters.getAttribute(d.Xq.getters.getAttribute(d.Xq.getters.getContext(),"participantFlags"),"adult")},{name:"client:getAttribute2",expr:()=>d.Xq.participantFlags.hasKeyAndValue("adult","1")},{name:"client:checkResponseValueWithRegex",expr:()=>d.Xq.checkResponseValueWithRegex("intake.Q6","rg.1","/[0-9]{5}/")},{name:"client:responseHasKeysAll",expr:()=>d.Xq.responseHasKeysAll("intake.Q1","rg.mcg","cat","dog")},{name:"client:responseHasOnlyKeysOtherThan",expr:()=>d.Xq.responseHasOnlyKeysOtherThan("intake.Q1","rg.mcg","cat","dog")}],q=new f;q.add(C);const b=e=>(0,s.Z)()?(n(5577),(e=>{const t=E.get(e);return t?o.createElement(y,t):o.createElement("span",null,"Unknown component ",e)})(e.name)):"Only online",R=e=>(0,s.Z)()?(n(5577),(e=>{const t=q.get(e);return t?o.createElement(S,t):o.createElement("span",null,"Unknown component ",e)})(e.name)):"Only online"},9739:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var s=n(7462),o=(n(7294),n(3905)),a=n(6334);const r={sidebar_label:"Response Components"},i="Survey Item Response Components",l={unversionedId:"survey-engine/components/response",id:"survey-engine/components/response",title:"Survey Item Response Components",description:"Date Input",source:"@site/docs/survey-engine/components/03-response.mdx",sourceDirName:"survey-engine/components",slug:"/survey-engine/components/response",permalink:"/survey-handbook/docs/survey-engine/components/response",draft:!1,editUrl:"https://github.com/influenzanet/survey-handbook/docs/survey-engine/components/03-response.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Response Components"},sidebar:"tutorialSidebar",previous:{title:"Display Components",permalink:"/survey-handbook/docs/survey-engine/components/display"},next:{title:"Expressions",permalink:"/survey-handbook/docs/survey-engine/expressions"}},c={},p=[{value:"Date Input",id:"date-input",level:3},{value:"Single Choice Group",id:"single-choice-group",level:3}],u={toc:p},g="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(g,(0,s.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"survey-item-response-components"},"Survey Item Response Components"),(0,o.kt)("h3",{id:"date-input"},"Date Input"),(0,o.kt)(a.P,{name:"dateInput",mdxType:"SurveyComponent"}),(0,o.kt)("h3",{id:"single-choice-group"},"Single Choice Group"),(0,o.kt)(a.P,{name:"singleChoice",mdxType:"SurveyComponent"}))}m.isMDXComponent=!0}}]);