"use strict";(self.webpackChunkifn_survey_handbook=self.webpackChunkifn_survey_handbook||[]).push([[820],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(n),h=i,f=c["".concat(s,".").concat(h)]||c[h]||m[h]||r;return n?a.createElement(f,l(l({ref:t},p),{},{components:n})):a.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},6166:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const r={},l="Repositories",o={unversionedId:"system/repositories",id:"system/repositories",title:"Repositories",description:"Curated list of repositories about the influenzanet projects",source:"@site/docs/system/03-repositories.md",sourceDirName:"system",slug:"/system/repositories",permalink:"/docs/system/repositories",draft:!1,editUrl:"https://github.com/influenzanet/survey-handbook/docs/system/03-repositories.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"systemSidebar",previous:{title:"Installation",permalink:"/docs/system/installation"}},s={},u=[{value:"Backend",id:"backend",level:2},{value:"gRPC Services",id:"grpc-services",level:3},{value:"Microservices",id:"microservices",level:3},{value:"Helm Charts (Kuberbenetes installation)",id:"helm-charts-kuberbenetes-installation",level:2},{value:"Surveys (Influenzanet Surveillance implementation)",id:"surveys-influenzanet-surveillance-implementation",level:2},{value:"Web client and librairies",id:"web-client-and-librairies",level:2},{value:"Participant web app",id:"participant-web-app",level:3},{value:"Survey libraries",id:"survey-libraries",level:3},{value:"Case Editor Tools",id:"case-editor-tools",level:4},{value:"Survey tools",id:"survey-tools",level:3},{value:"Administration tools",id:"administration-tools",level:2},{value:"Python Administration tool suite",id:"python-administration-tool-suite",level:3},{value:"Data Analysis",id:"data-analysis",level:2},{value:"European Database analysis",id:"european-database-analysis",level:3},{value:"Visualization tools",id:"visualization-tools",level:3}],p={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"repositories"},"Repositories"),(0,i.kt)("p",null,"Curated list of repositories about the influenzanet projects"),(0,i.kt)("h2",{id:"backend"},"Backend"),(0,i.kt)("h3",{id:"grpc-services"},"gRPC Services"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/api"},"https://github.com/influenzanet/api")," ")),(0,i.kt)("h3",{id:"microservices"},"Microservices"),(0,i.kt)("p",null,"Core services:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/messaging-service"},"https://github.com/influenzanet/messaging-service")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/user-management-service"},"https://github.com/influenzanet/user-management-service")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/study-service"},"https://github.com/influenzanet/study-service")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/api-gateway"},"https://github.com/influenzanet/api-gateway")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/logging-service"},"https://github.com/influenzanet/logging-service"))),(0,i.kt)("p",null,"Influenzanet Surveillance specific project:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/counter-service"},"https://github.com/influenzanet/counter-service")," : Candidate for Counter service")),(0,i.kt)("h2",{id:"helm-charts-kuberbenetes-installation"},"Helm Charts (Kuberbenetes installation)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/cluster-management"},"https://github.com/influenzanet/cluster-management"))),(0,i.kt)("h2",{id:"surveys-influenzanet-surveillance-implementation"},"Surveys (Influenzanet Surveillance implementation)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/common-study-definition"},"https://github.com/influenzanet/common-study-definition")," : Common Survey Implementations"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/surveys-standards"},"https://github.com/influenzanet/surveys-standards")," : Common survey descriptions")),(0,i.kt)("h2",{id:"web-client-and-librairies"},"Web client and librairies"),(0,i.kt)("h3",{id:"participant-web-app"},"Participant web app"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/participant-webapp"},"https://github.com/influenzanet/participant-webapp")," : Boilerplate implementation for Participant web app")),(0,i.kt)("h3",{id:"survey-libraries"},"Survey libraries"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/survey-engine.ts"},"https://github.com/influenzanet/survey-engine.ts")," : Survey Engine library (logic and survey structure)")),(0,i.kt)("p",null,"Web App Core : The core library embedding Participant web app logic"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/coneno/case-web-app-core"},"https://github.com/coneno/case-web-app-core")," (Coneno main repository)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/case-web-app-core"},"https://github.com/influenzanet/case-web-app-core")," (Influenzanet fork)")),(0,i.kt)("p",null,"Case Web UI : the UI Components used in several websites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/coneno/case-web-ui"},"https://github.com/coneno/case-web-ui")," (Coneno main repository)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/case-web-ui"},"https://github.com/influenzanet/case-web-ui")," (Influenzanet fork)")),(0,i.kt)("h4",{id:"case-editor-tools"},"Case Editor Tools"),(0,i.kt)("p",null,"Library to build survey programmatically (used by common-study-definition)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/case-framework/case-editor-tools"},"https://github.com/case-framework/case-editor-tools")," (main repo)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/case-editor-tools"},"https://github.com/influenzanet/case-editor-tools")," (Influenzanet fork)")),(0,i.kt)("h3",{id:"survey-tools"},"Survey tools"),(0,i.kt)("p",null,"Library to work with surveys (post processing/validation)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/survey-tools.ts"},"https://github.com/influenzanet/survey-tools.ts"))),(0,i.kt)("h2",{id:"administration-tools"},"Administration tools"),(0,i.kt)("h3",{id:"python-administration-tool-suite"},"Python Administration tool suite"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/python-ifncli"},"https://github.com/influenzanet/python-ifncli")," : The main python command line"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/python-influenzanet-surveys"},"https://github.com/influenzanet/python-influenzanet-surveys")," : Survey library"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/python-influenzanet-api"},"https://github.com/influenzanet/python-influenzanet-api")," : Administration API library")),(0,i.kt)("h2",{id:"data-analysis"},"Data Analysis"),(0,i.kt)("h3",{id:"european-database-analysis"},"European Database analysis"),(0,i.kt)("p",null,"Data analysis at the European level, using central database of Influenzanet consortium"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/influenzanet/data-analysis-europe"},"https://github.com/influenzanet/data-analysis-europe"))),(0,i.kt)("h3",{id:"visualization-tools"},"Visualization tools"),(0,i.kt)("p",null,"Python script to generate some graphics from the database (map and timeseries) at the country/instance level"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/influenzanet/visualization-tools"},"https://github.com/influenzanet/visualization-tools")))}m.isMDXComponent=!0}}]);