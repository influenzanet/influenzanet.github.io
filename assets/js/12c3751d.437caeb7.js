"use strict";(self.webpackChunkifn_survey_handbook=self.webpackChunkifn_survey_handbook||[]).push([[984],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>m});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=t.createContext({}),l=function(e){var r=t.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},u=function(e){var r=l(e.components);return t.createElement(p.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},y=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(n),y=o,m=c["".concat(p,".").concat(y)]||c[y]||d[y]||a;return n?t.createElement(m,i(i({ref:r},u),{},{components:n})):t.createElement(m,i({ref:r},u))}));function m(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=y;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s[c]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},114:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var t=n(7462),o=(n(7294),n(3905));const a={sidebar_label:"Expressions",sidebar_class_name:"green"},i="Survey Engine Expressions",s={unversionedId:"survey-engine/expressions",id:"survey-engine/expressions",title:"Survey Engine Expressions",description:"Expression are tree structures to represent operation to be evaluated at runtime and can produce a value. They provides dynamic property evaluation for the survey logic.",source:"@site/docs/survey-engine/03-expressions.md",sourceDirName:"survey-engine",slug:"/survey-engine/expressions",permalink:"/survey-handbook/docs/survey-engine/expressions",draft:!1,editUrl:"https://github.com/influenzanet/survey-handbook/docs/survey-engine/03-expressions.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Expressions",sidebar_class_name:"green"},sidebar:"tutorialSidebar",previous:{title:"Response Components",permalink:"/survey-handbook/docs/survey-engine/components/response"},next:{title:"Internationalization",permalink:"/survey-handbook/docs/survey-engine/i18n"}},p={},l=[],u={toc:l},c="wrapper";function d(e){let{components:r,...n}=e;return(0,o.kt)(c,(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"survey-engine-expressions"},"Survey Engine Expressions"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Expression")," are tree structures to represent operation to be evaluated at runtime and can produce a value. They provides dynamic property evaluation for the survey logic."),(0,o.kt)("p",null,"An ",(0,o.kt)("strong",{parentName:"p"},"Expression")," is a simple structure that can be either:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A typed literal value (numerical, string)"),(0,o.kt)("li",{parentName:"ul"},"A call, with a ",(0,o.kt)("inlineCode",{parentName:"li"},"name")," and a field ",(0,o.kt)("inlineCode",{parentName:"li"},"data")," set of parameters with a list of ",(0,o.kt)("inlineCode",{parentName:"li"},"Expression"))))}d.isMDXComponent=!0}}]);