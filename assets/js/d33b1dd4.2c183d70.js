"use strict";(self.webpackChunkifn_survey_handbook=self.webpackChunkifn_survey_handbook||[]).push([[605],{3373:(e,t,n)=>{n.d(t,{E:()=>N,P:()=>T});var o=n(2389),i=n(7294),a=n(5409),r=n(4866),l=n(5162),s=n(614),p=n(7546);const c=e=>new Map([["en",e]]),u=e=>({code:"en",parts:[e]}),m=(e,t)=>({versionId:"1",surveyDefinition:{key:"test"+(t??""),items:["function"==typeof e?e():e]}}),y=e=>{const[t,n]=(0,i.useState)(void 0);return i.createElement("div",{className:"survey-viewer-"+e.id},i.createElement(a.oP,{survey:m(e.item,e.id),languageCode:"en",backBtnText:"Back",nextBtnText:"Next",onSubmit:e=>n(e[0]),submitBtnText:"Submit",invalidResponseText:"Please check your response",showKeys:!1,hideBackButton:!0}),t?i.createElement("div",{className:"card bg-default"},i.createElement("div",{className:"card-body p-1"},i.createElement("pre",{className:"p-0 m-0"},JSON.stringify(t,void 0,1)))):"")},d=e=>{const t=(e=>{"function"==typeof e&&e();const t=m(e);return new p.S(t,{},[],!0).getRenderedSurvey().items.at(0)})(e.item),n={...e,item:e.item},o=e.customViewer??i.createElement(y,n),a=e.json??t;return i.createElement(r.Z,null,i.createElement(l.Z,{value:"item",label:"Component"},o),i.createElement(l.Z,{value:"code",label:"Code (case-editor-tools)"},i.createElement(s.Z,{language:"jsx"},e.codeSnippet),i.createElement("span",{style:{fontSize:".8em",fontStyle:"italic"}},"To simplify code, helpers ",i.createElement("code",null,"textMap()")," and ",i.createElement("code",null,"text()")," generate respectively a Map and a Localized Text for the english text provided. See Internationalization for more details of translation.")),a?i.createElement(l.Z,{value:"json",label:"JSON"},i.createElement(s.Z,{language:"json"},JSON.stringify(a,void 0,2))):void 0)},x={"client:or":"SurveyEngine.logic.or(\n            SurveyEngine.hasResponse('intake.Q1','rg.scg.1'),\n            SurveyEngine.hasResponse('intake.Q2','rg.scg.1')\n            )\n            ","client:and":"SurveyEngine.logic.and(\n            SurveyEngine.hasResponse('intake.Q1','rg.scg.1'),\n            SurveyEngine.hasResponse('intake.Q2','rg.scg.1')\n            )\n            ","client:not":"SurveyEngine.logic.not(\n            SurveyEngine.hasResponse('intake.Q1','rg.scg.1')\n            )\n            ","client:eq":"SurveyEngine.compare.eq(\n                SurveyEngine.getResponseValueAsNum('survey.age','rg.age'),\n                20\n            )\n            ","client:lt":"SurveyEngine.compare.lt(\n            SurveyEngine.getResponseValueAsNum('survey.age','rg.age'),\n            20\n            )\n            ","client:timestampWithOffset":"SurveyEngine.timestampWithOffset({years: -1})\n            ","client:hasResponse":"// Check if the question intake.Q5 has response int the MultipleChoice (mcg) in the Response Group (rg)\n               return SurveyEngine.hasResponse('intake.Q5', 'rg.mcg')\n            ","client:getAttribute":"// Extract participantFlags from context and 'adult' element from it\n               return SurveyEngine.getters.getAttribute(\n                SurveyEngine.getters.getAttribute(SurveyEngine.getters.getContext(), 'participantFlags'),\n                'adult'\n                )\n            ","client:getAttribute2":"// Extract 'adult' from participantFlags and test if it's equal to '1' (flags value are strings)\n               return SurveyEngine.participantFlags.hasKeyAndValue(\"adult\", \"1\")\n            ","client:checkResponseValueWithRegex":"// Extract 'adult' from participantFlags and test if it's equal to '1' (flags value are strings)\n               return SurveyEngine.checkResponseValueWithRegex('intake.Q6', 'rg.1', '/[0-9]{5}/')\n            ","client:responseHasKeysAll":"// 'intake.Q1' multiplechoice group has, at least option checked with key 'cat' AND 'dog' (regardless other checked response)\n               return SurveyEngine.responseHasKeysAll('intake.Q1','rg.mcg', 'cat', 'dog')\n            ","client:responseHasOnlyKeysOtherThan":"// 'intake.Q1' multiplechoice group has NOT option checked with key 'cat' NOR 'dog' (regardless other checked response)\n              return SurveyEngine.responseHasOnlyKeysOtherThan('intake.Q1','rg.mcg', 'cat', 'dog')\n            ","i18n:dateResponseDiffFromNow":'SurveyEngine.dateResponseDiffFromNow("survey.age","rg.date", "years", true);\n            ',singleChoice:"SurveyItems.singleChoice({\n    itemKey:'t1',\n    parentKey:'test',\n    questionText: textMap(\"Single Choice Example \"),\n    responseOptions:[\n        {'key': '1', content: textMap(\"My Option\"), role: 'option' },\n    ]\n  });\n  ",DropDownItem:"SurveyItems.dropDown({\n    itemKey:'t1',\n    parentKey:'test',\n    questionText: textMap(\"DropDown Example \"),\n    responseOptions:[\n        {'key': '1', content: textMap(\"Option One\"), role: 'option' },\n        {'key': '2', content: textMap(\"Option Two\"), role: 'option' },\n        {'key': '3', content: textMap(\"Option Three\"), role: 'option' },\n    ]\n  });\n  ",MultipleChoice:"SurveyItems.multipleChoice({\n    itemKey:'t2',\n    parentKey:'test',\n    questionText: textMap(\"Multiple Choice Example \"),\n    responseOptions:[\n        {'key': '1', content: textMap(\"Choice 1\"), role: 'option' },\n        {'key': '2', content: textMap(\"Choice 2\"), role: 'option' },\n        {'key': '3', content: textMap(\"Choice 3\"), role: 'option' },\n    ]\n  });\n  ",MultipleChoiceExclusive:"const exclusive1 = SurveyEngine.multipleChoice.any('test.t3', \"1\");\n  const exclusive3 = SurveyEngine.multipleChoice.any('test.t3', \"3\");\n\n  return SurveyItems.multipleChoice({\n    itemKey:'t3',\n    parentKey:'test',\n    questionText: textMap(\"Multiple choice with exclusive option\"),\n    responseOptions:[\n      {'key': '1', content: textMap(\"Choice 1\"), role: 'option', disabled: exclusive3 },\n      {'key': '2', content: textMap(\"Choice 2\"), role: 'option' },\n      {'key': '3', content: textMap(\"Choice 3\"), role: 'option', disabled: exclusive1 },\n    ]\n  });\n  ",MultipleChoiceOpenItem:"SurveyItems.multipleChoice({\n    itemKey:'t2',\n    parentKey:'test',\n    questionText: textMap(\"Multiple Choice Example \"),\n    responseOptions:[\n        {'key': '1', content: textMap(\"Choice 1\"), role: 'option' },\n        {'key': '2', content: textMap(\"Choice 2\"), role: 'option' },\n        {\n          'key': '3', \n          content: textMap(\"Choice 3\"), \n          role: 'input',\n        },\n    ]\n  });\n  ",MultipleChoiceComplexOption:'SurveyItems.multipleChoice({\n    itemKey:\'t2\',\n    parentKey:\'test\',\n    questionText: textMap("Multiple Choice Example "),\n    responseOptions:[\n        {\'key\': \'1\', role: \'option\',\n          items: [\n            {"key": "1", role:"text", content: textMap("Main text of the option")},\n            {"key":"2",  role:"text", content: textMap("Small text"), style: [{key:"className", value:"d-block fs-6"}]}\n          ]\n        },\n        {\'key\': \'2\', content: textMap("Choice 2"), role: \'option\' },\n        {\n          \'key\': \'3\', \n          role: \'option\',\n          items: [\n            {"key":"1", role:"text", content: textMap("text in bold"), style: [{key:"className", value:"fw-bold"}]},\n            {"key":"2", role:"text", content: textMap(" text in red"), style: [{key:"className", value:"text-danger"}]}\n          ]\n        },\n    ]\n  });\n  ',ClozeInput:"SurveyItems.clozeQuestion({\n    itemKey:'t1',\n    parentKey:'test',\n    questionText: textMap(\"Cloze question\"),\n    items:[\n        {key: '0', role:'text', content: textMap(\"We can put a text and ask for an number\")},\n        {key: '1', role:'numberInput'},\n        {key: '2', role:'text', content: textMap(\"Then we can continue with another text and ask for a date\")},\n        {key: '3', role:'dateInput'},\n        {key: '4', role:'text', content: textMap(\"or a year-month\")},\n        {key: '5', role:'dateInput', optionProps: {'dateInputMode':'YM'}},\n        {key: '6', role:'text', content: textMap(\"or a drop down\")},\n        {key: '7', role:'dropDownGroup', items: [ \n            {'key': '1', content: textMap(\"Option 1\"), role:'option'},\n            {'key': '2', content: textMap(\"Option 1\"), role: 'option'},\n            \n        ]},\n        \n\n    ]\n  });\n  ",dateInput:"SurveyItems.dateInput({\n    itemKey: 'q1',\n    parentKey: 'test',\n    questionText:textMap(\"A date question\"),\n    dateInputMode: 'YMD',\n  });\n  ",YearMonthInput:"SurveyItems.dateInput({\n    itemKey: 'q2',\n    parentKey: 'test',\n    questionText:textMap(\"A year month question\"),\n    dateInputMode: 'YM',\n  });\n  ",YearInput:"SurveyItems.dateInput({\n    itemKey: 'q2',\n    parentKey: 'test',\n    questionText:textMap(\"A year question\"),\n    dateInputMode: 'Y',\n  });\n  ",MatrixDropDownItem:"SurveyItems.responsiveMatrix({\n    itemKey:'t2',\n    parentKey:'test',\n    questionText: textMap(\"Matrix with drop down\"),\n    breakpoint: 'xl',\n    responseType: \"dropdown\",\n    rows:   [  \n        {'key': 'r1', label: textMap(\"Row 1\"), role: 'row' },\n        {'key': 'r2', label: textMap(\"Row 2\"), role: 'row' },\n        {'key': 'r3', label: textMap(\"Row 3\"), role: 'row' },\n    ],\n    columns: [\n        {'key': 'c1', label: textMap(\"Col 1\")},\n        {'key': 'c2', label: textMap(\"Col 2\")},   \n    ],\n    dropdownConfig: {\n        unselectedLabeL: textMap(\"Choose\"),\n        options: [\n            {'key': '1', label: textMap(\"Choice 1\")},\n            {'key': '2', label: textMap(\"Choice 2\")},  \n        ]\n    }\n  });\n  ",MatrixDropDownCategoryItem:"SurveyItems.responsiveMatrix({\n      itemKey:'t2',\n      parentKey:'test',\n      questionText: textMap(\"Matrix with drop down\"),\n      responseType: \"dropdown\",\n      breakpoint: 'xl',\n      rows:   [  \n          {'key': 'rc3', label: textMap(\"A category\"), role: 'category' },\n          {'key': 'r1', label: textMap(\"Row 1\"), role: 'row' },\n          {'key': 'r2', label: textMap(\"Row 2\"), role: 'row' },\n          {'key': 'rc2', label: textMap(\"A second category\"), role: 'category' },\n          {'key': 'r3', label: textMap(\"Row 3\"), role: 'row' },\n          {'key': 'r4', label: textMap(\"Row 4\"), role: 'row' },\n      ],\n      columns: [\n          {'key': 'c1', label: textMap(\"Col 1\")},\n          {'key': 'c2', label: textMap(\"Col 2\")},   \n      ],\n      dropdownConfig: {\n          unselectedLabeL: textMap(\"Choose\"),\n          options: [\n              {'key': '1', label: textMap(\"Choice 1\")},\n              {'key': '2', label: textMap(\"Choice 2\")},  \n          ]\n      }\n    });\n    ",MatrixInputItem:"SurveyItems.responsiveMatrix({\n      itemKey:'t2',\n      parentKey:'test',\n      questionText: textMap(\"Matrix with drop down\"),\n      breakpoint: 'xl',\n      responseType: \"numberInput\",\n      rows:   [  \n          {'key': 'r1', label: textMap(\"Row 1\"), role: 'row' },\n          {'key': 'r2', label: textMap(\"Row 2\"), role: 'row' },\n          {'key': 'r3', label: textMap(\"Row 3\"), role: 'row' },\n      ],\n      columns: [\n          {'key': 'c1', label: textMap(\"Col 1\")},\n          {'key': 'c2', label: textMap(\"Col 2\")},   \n      ]\n    });\n    ",textComponent:"/**\n   * The display helper creates a SurveyItem with a list of textual components\n   * \n   * Each component here has the 'text' role and can show a list of text.\n   * `style` option can be used to customize visual style of the text\n   */\n\n  return SurveyItems.display({\n    itemKey:'t1',\n    parentKey:'test',\n\n    content: [ // List of texts to show\n        \n        {\n            'role': 'text',\n            content: [  // Content is a list of LocalizedObject, each can contain a text (or a expression, resolved during item rendering using response or context)\n                text(\"A stylized text using 'h2' style variant\")\n            ],\n            style: [ // Styles can be used to customize th rendering of the text\n                {key: 'variant', value:'h2'}\n            ]\n        },\n        {\n            role: 'text',\n            content:[ \n                text(\"A very intersting text\") \n            ]\n        }\n   ]\n  });\n  ",basicText:"/**\n                 * The display helper creates a SurveyItem with a list of textual components\n                 * \n                 * Each component here has the 'text' role and can show a list of text.\n                 * `style` option can be used to customize visual style of the text\n                 */\n\n                return SurveyItems.display({\n                    itemKey:'t1',\n                    parentKey:'test',\n\n                    content: [ // List of texts to show\n                        {\n                            role: 'text',\n                            content:[ \n                                text(\"A very intersting text\") \n                            ]\n                        }                       \n                    ]\n                });\n            ",TextInput:"SurveyItems.textInput({\n    itemKey:'t1',\n    parentKey:'test',\n    questionText: textMap(\"Simple text input\"),\n    placeholderText: textMap(\"Placeholder text\")\n  });\n  ",NumberInput:"SurveyItems.numericInput({\n    itemKey:'t2',\n    parentKey:'test',\n    inputLabel: textMap(\"Input label\"),\n    questionText: textMap(\"Number input question \"),\n    componentProperties: {\n      min: 0,\n      max: 120\n    }\n  });\n  ",MultilineTextInput:"SurveyItems.multilineTextInput({\n    itemKey:'t2',\n    parentKey:'test',\n    inputLabelText: textMap(\"My Input label \"),\n    questionText: textMap(\"Question with Multiline Text Input\"),\n  });\n  ",snippetName:"*   ... you code snippet\n* "};class h{constructor(){this.viewers=new Map,this.count=0}registerViewer(e){const t=(n=e.name,x[n]??void 0??'Code snippet not found for "'+e.name+'"');var n;++this.count,this.viewers.set(e.name,{...e,codeSnippet:t,id:this.count})}add(e){Array.isArray(e)?e.forEach((e=>{this.registerViewer(e)})):this.registerViewer(e)}get(e){return this.viewers.get(e)}}var k=n(4453);const g=[{name:"singleChoice",item:()=>k.Cy.singleChoice({itemKey:"t1",parentKey:"test",questionText:c("Single Choice Example "),responseOptions:[{key:"1",content:c("My Option"),role:"option"}]}),prefill:{key:"rg",items:[{key:"scg",items:[{key:"t1"}]}]}},{name:"MultipleChoice",item:()=>k.Cy.multipleChoice({itemKey:"t2",parentKey:"test",questionText:c("Multiple Choice Example "),responseOptions:[{key:"1",content:c("Choice 1"),role:"option"},{key:"2",content:c("Choice 2"),role:"option"},{key:"3",content:c("Choice 3"),role:"option"}]})},{name:"MultipleChoiceExclusive",item:()=>{const e=k.Xq.multipleChoice.any("test.t3","1"),t=k.Xq.multipleChoice.any("test.t3","3");return k.Cy.multipleChoice({itemKey:"t3",parentKey:"test",questionText:c("Multiple choice with exclusive option"),responseOptions:[{key:"1",content:c("Choice 1"),role:"option",disabled:t},{key:"2",content:c("Choice 2"),role:"option"},{key:"3",content:c("Choice 3"),role:"option",disabled:e}]})}},{name:"MultipleChoiceOpenItem",item:()=>k.Cy.multipleChoice({itemKey:"t2",parentKey:"test",questionText:c("Multiple Choice Example "),responseOptions:[{key:"1",content:c("Choice 1"),role:"option"},{key:"2",content:c("Choice 2"),role:"option"},{key:"3",content:c("Choice 3"),role:"input"}]})},{name:"MultipleChoiceComplexOption",item:()=>k.Cy.multipleChoice({itemKey:"t2",parentKey:"test",questionText:c("Multiple Choice Example "),responseOptions:[{key:"1",role:"option",items:[{key:"1",role:"text",content:c("Main text of the option")},{key:"2",role:"text",content:c("Small text"),style:[{key:"className",value:"d-block fs-6"}]}]},{key:"2",content:c("Choice 2"),role:"option"},{key:"3",role:"option",items:[{key:"1",role:"text",content:c("text in bold"),style:[{key:"className",value:"fw-bold"}]},{key:"2",role:"text",content:c(" text in red"),style:[{key:"className",value:"text-danger"}]}]}]})},{name:"DropDownItem",item:()=>k.Cy.dropDown({itemKey:"t1",parentKey:"test",questionText:c("DropDown Example "),responseOptions:[{key:"1",content:c("Option One"),role:"option"},{key:"2",content:c("Option Two"),role:"option"},{key:"3",content:c("Option Three"),role:"option"}]})}],w=[{name:"dateInput",item:()=>k.Cy.dateInput({itemKey:"q1",parentKey:"test",questionText:c("A date question"),dateInputMode:"YMD"})},{name:"YearMonthInput",item:()=>k.Cy.dateInput({itemKey:"q2",parentKey:"test",questionText:c("A year month question"),dateInputMode:"YM"})},{name:"YearInput",item:()=>k.Cy.dateInput({itemKey:"q2",parentKey:"test",questionText:c("A year question"),dateInputMode:"Y"})}],v=[{name:"basicText",item:()=>k.Cy.display({itemKey:"t1",parentKey:"test",content:[{role:"text",content:[u("A very intersting text")]}]})},{name:"textComponent",item:()=>k.Cy.display({itemKey:"t1",parentKey:"test",content:[{role:"text",content:[u("A stylized text using 'h2' style variant")],style:[{key:"variant",value:"h2"}]},{role:"text",content:[u("A very intersting text")]}]})}],M=[{name:"TextInput",item:()=>k.Cy.textInput({itemKey:"t1",parentKey:"test",questionText:c("Simple text input"),placeholderText:c("Placeholder text")})},{name:"NumberInput",item:()=>k.Cy.numericInput({itemKey:"t2",parentKey:"test",inputLabel:c("Input label"),questionText:c("Number input question "),componentProperties:{min:0,max:120}})},{name:"MultilineTextInput",item:()=>k.Cy.multilineTextInput({itemKey:"t2",parentKey:"test",inputLabelText:c("My Input label "),questionText:c("Question with Multiline Text Input")})}],C=[{name:"MatrixDropDownItem",item:()=>k.Cy.responsiveMatrix({itemKey:"t2",parentKey:"test",questionText:c("Matrix with drop down"),breakpoint:"xl",responseType:"dropdown",rows:[{key:"r1",label:c("Row 1"),role:"row"},{key:"r2",label:c("Row 2"),role:"row"},{key:"r3",label:c("Row 3"),role:"row"}],columns:[{key:"c1",label:c("Col 1")},{key:"c2",label:c("Col 2")}],dropdownConfig:{unselectedLabeL:c("Choose"),options:[{key:"1",label:c("Choice 1")},{key:"2",label:c("Choice 2")}]}})},{name:"MatrixDropDownCategoryItem",item:()=>k.Cy.responsiveMatrix({itemKey:"t2",parentKey:"test",questionText:c("Matrix with drop down"),responseType:"dropdown",breakpoint:"xl",rows:[{key:"rc3",label:c("A category"),role:"category"},{key:"r1",label:c("Row 1"),role:"row"},{key:"r2",label:c("Row 2"),role:"row"},{key:"rc2",label:c("A second category"),role:"category"},{key:"r3",label:c("Row 3"),role:"row"},{key:"r4",label:c("Row 4"),role:"row"}],columns:[{key:"c1",label:c("Col 1")},{key:"c2",label:c("Col 2")}],dropdownConfig:{unselectedLabeL:c("Choose"),options:[{key:"1",label:c("Choice 1")},{key:"2",label:c("Choice 2")}]}})},{name:"MatrixInputItem",item:()=>k.Cy.responsiveMatrix({itemKey:"t2",parentKey:"test",questionText:c("Matrix with drop down"),breakpoint:"xl",responseType:"numberInput",rows:[{key:"r1",label:c("Row 1"),role:"row"},{key:"r2",label:c("Row 2"),role:"row"},{key:"r3",label:c("Row 3"),role:"row"}],columns:[{key:"c1",label:c("Col 1")},{key:"c2",label:c("Col 2")}]})}],b=[{name:"ClozeInput",item:()=>k.Cy.clozeQuestion({itemKey:"t1",parentKey:"test",questionText:c("Cloze question"),items:[{key:"0",role:"text",content:c("We can put a text and ask for an number")},{key:"1",role:"numberInput"},{key:"2",role:"text",content:c("Then we can continue with another text and ask for a date")},{key:"3",role:"dateInput"},{key:"4",role:"text",content:c("or a year-month")},{key:"5",role:"dateInput",optionProps:{dateInputMode:"YM"}},{key:"6",role:"text",content:c("or a drop down")},{key:"7",role:"dropDownGroup",items:[{key:"1",content:c("Option 1"),role:"option"},{key:"2",content:c("Option 1"),role:"option"}]}]})}],f=new h;f.add(g),f.add(w),f.add(v),f.add(M),f.add(C),f.add(b);const I=e=>{const t="function"==typeof e.expr?e.expr():e.expr,n=JSON.stringify(t,null,1);return i.createElement(r.Z,null,i.createElement(l.Z,{value:"code",label:"Code (case-editor-tools)"},i.createElement(s.Z,{language:"ts"}," ",e.codeSnippet," ")),i.createElement(l.Z,{value:"expr",label:"JSON"},i.createElement(s.Z,{language:"json"},n)))},q=[{name:"client:or",expr:()=>k.Xq.logic.or(k.Xq.hasResponse("intake.Q1","rg.scg.1"),k.Xq.hasResponse("intake.Q2","rg.scg.1"))},{name:"client:and",expr:()=>k.Xq.logic.and(k.Xq.hasResponse("intake.Q1","rg.scg.1"),k.Xq.hasResponse("intake.Q2","rg.scg.1"))},{name:"client:not",expr:()=>k.Xq.logic.not(k.Xq.hasResponse("intake.Q1","rg.scg.1"))},{name:"client:eq",expr:()=>k.Xq.compare.eq(k.Xq.getResponseValueAsNum("survey.age","rg.age"),20)},{name:"client:lt",expr:()=>k.Xq.compare.lt(k.Xq.getResponseValueAsNum("survey.age","rg.age"),20)},{name:"client:timestampWithOffset",expr:()=>k.Xq.timestampWithOffset({years:-1})},{name:"client:hasResponse",expr:()=>k.Xq.hasResponse("intake.Q5","rg.mcg")},{name:"client:getAttribute",expr:()=>k.Xq.getters.getAttribute(k.Xq.getters.getAttribute(k.Xq.getters.getContext(),"participantFlags"),"adult")},{name:"client:getAttribute2",expr:()=>k.Xq.participantFlags.hasKeyAndValue("adult","1")},{name:"client:checkResponseValueWithRegex",expr:()=>k.Xq.checkResponseValueWithRegex("intake.Q6","rg.1","/[0-9]{5}/")},{name:"client:responseHasKeysAll",expr:()=>k.Xq.responseHasKeysAll("intake.Q1","rg.mcg","cat","dog")},{name:"client:responseHasOnlyKeysOtherThan",expr:()=>k.Xq.responseHasOnlyKeysOtherThan("intake.Q1","rg.mcg","cat","dog")},{name:"i18n:dateResponseDiffFromNow",expr:()=>k.Xq.dateResponseDiffFromNow("survey.age","rg.date","years",!0)}],K=new h;K.add(q);const T=e=>(0,o.Z)()?(n(5577),(e=>{const t=f.get(e);return t?i.createElement(d,t):i.createElement("span",null,"Unknown component ",e)})(e.name)):"Only online",N=e=>(0,o.Z)()?(n(5577),(e=>{const t=K.get(e);return t?i.createElement(I,t):i.createElement("span",null,"Unknown component ",e)})(e.name)):"Only online"},5889:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>y,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(7462),i=(n(7294),n(3905)),a=n(3373);const r={sidebar_label:"Matrix"},l="Matrix Component",s={unversionedId:"survey-engine/components/response/matrix",id:"survey-engine/components/response/matrix",title:"Matrix Component",description:"Description",source:"@site/docs/survey-engine/components/03-response/04-matrix.mdx",sourceDirName:"survey-engine/components/03-response",slug:"/survey-engine/components/response/matrix",permalink:"/survey-handbook/docs/survey-engine/components/response/matrix",draft:!1,editUrl:"https://github.com/influenzanet/survey-handbook/docs/survey-engine/components/03-response/04-matrix.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Matrix"},sidebar:"tutorialSidebar",previous:{title:"Date",permalink:"/survey-handbook/docs/survey-engine/components/response/date"},next:{title:"Cloze question",permalink:"/survey-handbook/docs/survey-engine/components/response/cloze"}},p={},c=[{value:"Description",id:"description",level:2},{value:"Rows",id:"rows",level:3},{value:"Columns",id:"columns",level:3},{value:"Dropdown options",id:"dropdown-options",level:3},{value:"Examples",id:"examples",level:2},{value:"Matrix with Dropdown cell",id:"matrix-with-dropdown-cell",level:3},{value:"Matrix with Dropdown cell, and row category",id:"matrix-with-dropdown-cell-and-row-category",level:3},{value:"Matrix with input cell",id:"matrix-with-input-cell",level:3}],u={toc:c},m="wrapper";function y(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"matrix-component"},"Matrix Component"),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"Matrix component can be used to collect data in a table-like layout with several rows or columns."),(0,i.kt)("p",null,"A matrix component is composed by :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A list of ",(0,i.kt)("inlineCode",{parentName:"li"},"rows")),(0,i.kt)("li",{parentName:"ul"},"A list of ",(0,i.kt)("inlineCode",{parentName:"li"},"columns")),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"responseType")," : defines the what kind of data is collected in each cell, can be ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"'dropdown' : A list of choices"),(0,i.kt)("li",{parentName:"ul"},"'input' : Textual input field ",(0,i.kt)("strong",{parentName:"li"},"(Not implemented yet)")),(0,i.kt)("li",{parentName:"ul"},"'numberInput': Number input field ",(0,i.kt)("strong",{parentName:"li"},"(Not implemented yet)"))))),(0,i.kt)("h3",{id:"rows"},"Rows"),(0,i.kt)("p",null,"Each ",(0,i.kt)("em",{parentName:"p"},"row")," can have several properties:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"key"),": row identifier (must be unique in the matrix rows)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"role"),": can be a 'row', or a 'category'"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"displayCondition")," : an ",(0,i.kt)("a",{parentName:"li",href:"../expression"},"Expression")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"label")," : a ",(0,i.kt)("a",{parentName:"li",href:"../../../general/concepts#localized"},"Localized Text")," row label "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"className"),": style(s) name")),(0,i.kt)("h3",{id:"columns"},"Columns"),(0,i.kt)("p",null,"Each columns are defined by:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"key"),": a column identifier (must be unique in the matrix columns)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"label"),": ",(0,i.kt)("a",{parentName:"li",href:"/general/concepts#localized"},"Localized Text")," column label")),(0,i.kt)("admonition",{title:"Warning",type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"rows and columns identifiers are very important, they will identify the response cell in the stored response. They must be unique for each kind.")),(0,i.kt)("h3",{id:"dropdown-options"},"Dropdown options"),(0,i.kt)("p",null," the property ",(0,i.kt)("inlineCode",{parentName:"p"},"dropdownConfig")," defines the dropdown options with:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"unselectedLabeL"),": ",(0,i.kt)("a",{parentName:"li",href:"/general/concepts#localized"},"Localized Text")," text to be shown when no option is selected"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"options")," : list of option (only ",(0,i.kt)("inlineCode",{parentName:"li"},"key")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"label")," properties are expected here for each option).")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"matrix-with-dropdown-cell"},"Matrix with Dropdown cell"),(0,i.kt)(a.P,{name:"MatrixDropDownItem",mdxType:"SurveyComponent"}),(0,i.kt)("h3",{id:"matrix-with-dropdown-cell-and-row-category"},"Matrix with Dropdown cell, and row category"),(0,i.kt)(a.P,{name:"MatrixDropDownCategoryItem",mdxType:"SurveyComponent"}),(0,i.kt)("h3",{id:"matrix-with-input-cell"},"Matrix with input cell"),(0,i.kt)(a.P,{name:"MatrixInputItem",mdxType:"SurveyComponent"}))}y.isMDXComponent=!0}}]);